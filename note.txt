### ðŸ—‚ Struktur Project E-Commerce (MVC)

**ðŸ“‚ app** â†’ folder utama berisi kode aplikasi dengan konsep **MVC (Model - View - Controller)**.

* **ðŸ“‚ controllers/**
  Berisi file controller yang mengatur alur logika aplikasi (menangkap request dari user, memanggil model, dan menampilkan view).

  * `Admin.php` â†’ controller untuk halaman/admin panel.
  * `Auth.php` â†’ controller untuk login, register, dan logout.
  * `Cart.php` â†’ controller untuk keranjang belanja.
  * `Checkout.php` â†’ controller untuk proses checkout.
  * `Home.php` â†’ controller halaman utama.
  * `Produk.php` â†’ controller untuk produk (list, detail produk, dll).

* **ðŸ“‚ core/**
  Berisi file inti (framework mini buatan sendiri).

  * `App.php` â†’ router utama, membaca URL lalu memanggil controller & method.
  * `Controller.php` â†’ class induk controller, biasanya ada fungsi `view()` atau helper lainnya.
  * `Database.php` â†’ class untuk koneksi database & query (pakai PDO).

* **ðŸ“‚ models/**
  Berisi model (akses database).

  * `Laporan_Model.php` â†’ model laporan (misalnya penjualan, order, dll).
  * `Pesanan_model.php` â†’ model untuk data pesanan.
  * `Produk_model.php` â†’ model untuk data produk.
  * `User_model.php` â†’ model untuk data user (login, register, role, dll).

* **ðŸ“‚ views/**
  Berisi tampilan (UI), dipanggil dari controller.

  * ðŸ“‚ **auth/**

    * `forget_pw.php` â†’ halaman lupa password.
    * `login.php` â†’ halaman login.
    * `register.php` â†’ halaman register.
  * ðŸ“‚ **produk/**

    * `detail.php` â†’ halaman detail produk.
    * `index.php` â†’ halaman list produk.
  * ðŸ“‚ **templates/**

    * `footer.php` â†’ template footer.
    * `header.php` â†’ template header.
  * `cart.php` â†’ halaman keranjang.
  * `checkout.php` â†’ halaman checkout.
  * `home.php` â†’ halaman utama.

* **ðŸ“‚ config/**

  * `config.php` â†’ file konfigurasi utama (misalnya `BASEURL`, setting database, dll).

---

**ðŸ“‚ public/** â†’ folder yang diakses oleh browser (semua asset publik).

* ðŸ“‚ **css/**

  * `style.css` â†’ file stylesheet utama.
* ðŸ“‚ **img/** â†’ gambar untuk produk, UI, dll.
* ðŸ“‚ **js/** â†’ file javascript frontend.

---

### ðŸ“‘ Alur Singkat

1. **User akses URL** â†’ dibaca `App.php` (router).
2. Router cari **Controller** sesuai URL â†’ contoh `/auth/login` manggil `Auth.php`.
3. Controller bisa panggil **Model** untuk akses database.
4. Controller lempar data ke **View** â†’ halaman ditampilkan ke user.

---
tes

 Dengan deskripsi ini, developer lain bisa langsung tahu **dimana edit file login, produk, cart, dll** tanpa bingung.

SECARA SINGKATNYA GINI SISTEM DARI FOLDER DAN FILENYA GES
JANGAN ASALTAROOOOOO!!! DIBACA DULU:
E-COMMERCE/
â”‚
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ controllers/
â”‚   â”‚   â”œâ”€â”€ Admin.php        â†’ Controller untuk halaman admin
â”‚   â”‚   â”œâ”€â”€ Auth.php         â†’ Controller untuk login, register, logout
â”‚   â”‚   â”œâ”€â”€ Cart.php         â†’ Controller untuk keranjang belanja
â”‚   â”‚   â”œâ”€â”€ Checkout.php     â†’ Controller untuk proses checkout
â”‚   â”‚   â”œâ”€â”€ Home.php         â†’ Controller untuk halaman utama
â”‚   â”‚   â”œâ”€â”€ Produk.php       â†’ Controller untuk halaman produk
â”‚   â”‚
â”‚   â”œâ”€â”€ core/
â”‚   â”‚   â”œâ”€â”€ App.php          â†’ Routing utama (menangani URL â†’ controller/method)
â”‚   â”‚   â”œâ”€â”€ Controller.php   â†’ Class induk semua controller (untuk load model & view)
â”‚   â”‚   â”œâ”€â”€ Database.php     â†’ Class untuk koneksi & query database (PDO)
â”‚   â”‚
â”‚   â”œâ”€â”€ models/
â”‚   â”‚   â”œâ”€â”€ User_model.php   â†’ Model user (login, register, getUserByEmail)
â”‚   â”‚   â”œâ”€â”€ Produk_model.php â†’ Model produk
â”‚   â”‚   â”œâ”€â”€ Pesanan_model.phpâ†’ Model pesanan
â”‚   â”‚   â”œâ”€â”€ Laporan_model.phpâ†’ Model laporan penjualan
â”‚   â”‚
â”‚   â”œâ”€â”€ views/
â”‚   â”‚   â”œâ”€â”€ auth/
â”‚   â”‚   â”‚   â”œâ”€â”€ login.php    â†’ Tampilan form login
â”‚   â”‚   â”‚   â”œâ”€â”€ register.php â†’ Tampilan form register
â”‚   â”‚   â”‚   â”œâ”€â”€ forget_pw.phpâ†’ Tampilan lupa password
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ produk/
â”‚   â”‚   â”‚   â”œâ”€â”€ index.php    â†’ Tampilan list produk
â”‚   â”‚   â”‚   â”œâ”€â”€ detail.php   â†’ Tampilan detail produk
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ cart.php         â†’ Tampilan keranjang
â”‚   â”‚   â”œâ”€â”€ checkout.php     â†’ Tampilan checkout
â”‚   â”‚   â”œâ”€â”€ home.php         â†’ Tampilan halaman utama
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ templates/
â”‚   â”‚       â”œâ”€â”€ header.php   â†’ Template header
â”‚   â”‚       â”œâ”€â”€ footer.php   â†’ Template footer
â”‚   â”‚
â”‚   â”œâ”€â”€ init.php             â†’ File loader (include core & config)
â”‚
â”œâ”€â”€ config/
â”‚   â””â”€â”€ config.php           â†’ Konfigurasi utama (DB, BASEURL, dll)
â”‚
â”œâ”€â”€ public/
â”‚   â”œâ”€â”€ index.php            â†’ Entry point project (load init.php â†’ App)
â”‚   â”œâ”€â”€ css/
â”‚   â”‚   â””â”€â”€ style.css        â†’ CSS utama
â”‚   â”œâ”€â”€ img/                 â†’ Folder gambar
â”‚



ini query untuk buat database :

DATABASE
(dimulai dari diawah)
CREATE DATABASE ecommerce;
USE ecommerce;

-- users
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nama VARCHAR(100) NOT NULL,
  gender ENUM('male','female') DEFAULT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  role ENUM('admin','user') DEFAULT 'user',
  alamat TEXT,
  no_hp VARCHAR(20),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- categories
CREATE TABLE categories (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nama_kategori VARCHAR(100) NOT NULL,
  deskripsi TEXT
);

-- products
CREATE TABLE products (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_kategori INT,
  nama_produk VARCHAR(150) NOT NULL,
  deskripsi TEXT,
  harga DECIMAL(12,2) NOT NULL,
  stok INT DEFAULT 0,
  gambar VARCHAR(255),
  FOREIGN KEY (id_kategori) REFERENCES categories(id) ON DELETE SET NULL
);

-- orders
CREATE TABLE orders (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_user INT,
  tanggal_order TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  total_harga DECIMAL(12,2) NOT NULL,
  status ENUM('pending','paid','shipped','completed','canceled') DEFAULT 'pending',
  FOREIGN KEY (id_user) REFERENCES users(id)
);

-- order_items
CREATE TABLE order_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_order INT,
  id_produk INT,
  jumlah INT NOT NULL,
  harga_satuan DECIMAL(12,2) NOT NULL,
  subtotal DECIMAL(12,2) NOT NULL,
  FOREIGN KEY (id_order) REFERENCES orders(id),
  FOREIGN KEY (id_produk) REFERENCES products(id)
);

-- payments
CREATE TABLE payments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_order INT,
  metode ENUM('transfer','COD','e-wallet') NOT NULL,
  jumlah DECIMAL(12,2) NOT NULL,
  tanggal TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  status ENUM('pending','success','failed') DEFAULT 'pending',
  FOREIGN KEY (id_order) REFERENCES orders(id)
);

-- shipments
CREATE TABLE shipments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_order INT,
  alamat_pengiriman TEXT NOT NULL,
  metode_pengiriman VARCHAR(100),
  biaya DECIMAL(12,2),
  status ENUM('pending','shipped','delivered','returned') DEFAULT 'pending',
  FOREIGN KEY (id_order) REFERENCES orders(id)
);


lalu untuk admin kita tambahin manual juga di sql : (dibaca dulu)

INSERT INTO users (nama, gender, email, password, role, alamat, no_hp) 
VALUES ('Administrator', 'male', 'admin@admin.com', MD5('admin123'), 'admin', bebas, bebas;

untuk user sudah bisa lewat register lalu login 